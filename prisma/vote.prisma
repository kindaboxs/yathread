model PostVote {
  id        Int      @id @default(autoincrement())
  postId   Int
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  post  Post  @relation("PostVotes", fields: [postId], references: [id], onDelete: Cascade)
  user  User  @relation("UserPostVotes", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([postId, userId])
  @@index([userId])
  @@index([postId])
  @@map("post_votes")
}

model CommentVote {
  id        Int      @id @default(autoincrement())
  commentId Int
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  comment Comment @relation("CommentVotes", fields: [commentId], references: [id], onDelete: Cascade)
  user    User    @relation("UserCommentVotes", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([commentId, userId])
  @@index([userId])
  @@index([commentId])
  @@map("comment_votes")
}
